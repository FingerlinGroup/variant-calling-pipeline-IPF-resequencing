# *********************************************************************
#                    ALIGNMENT TO REFERENCE GENOME
# http://bio-bwa.sourceforge.net/bwa.shtml
# https://docs.google.com/file/d/0B2dK2q40HDWeaGVrbE1GVV9SQkE/preview
# http://wiki.bits.vib.be/index.php/GATK_HaplotypeCaller_Analysis_of_BWA_(mem)_mapped_Illumina_reads
# *********************************************************************

include:
    config["directories"]["rules"] + "file_util.py"

rule bwa:
	input:
		fq1=fastq1,
		fq2=fastq2
	output:
		outAlign + "/{sample}.bam"
	run:
		out=outAlign + "/" + wildcards.sample
		shell("%s mem %s -M {input.fq1} {input.fq2} | %s view -bS - | %s sort -o %s -" % (bwa, reference, samtools, samtools, out))
		shell("%s %s -jar %s/AddOrReplaceReadGroups.jar I=%s O={output}.tmp RGID={wildcards.sample} RGLB={wildcards.sample} RGPL=illumina RGPU={wildcards.sample} RGSM={wildcards.sample}" % (java, jvm, picardDir, out))
		shell("rm -f %s" % out)
		shell("mv {output}.tmp {output}")
		
rule markDuplicates:
	input:
		origBam
	output:
		bam=outAlign + "/{sample}.duplicates_marked.bam",
		metrics=outAlign + "/{sample}.duplicate_metrics.txt",
		bai=outAlign + "/{sample}.duplicates_marked.bai"
	run:
		shell("%s %s -jar %s/MarkDuplicates.jar I={input} O={output.bam} M={output.metrics}" % (java, jvm, picardDir))
		shell("%s %s -jar %s/BuildBamIndex.jar I={output.bam}" % (java, jvm, picardDir))
		
